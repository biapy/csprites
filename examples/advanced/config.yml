# If true will show all sorts of strange output
debug: false

# The Class used to sort the images, you can create your own by extending
# SpriteAbstractSorter and placing the class in the sorters directory
sorter: SpriteLongestDimensionSorter

# The Class used to pack the images into a sprite, you can create your own by extending
# SpriteAbstractPacker and placing the class in the packers directory
packer: SpriteDefaultPacker

# The Class used to parse template (css or other) files. It must be implemeted
# via the SpriteAbstractParser
parser: SpriteDefaultCssParser

# The bounding box maximum size, the length of one size
# This should be some large integer, if your sprites are getting cut off
# (being larger than 10,000px in length or height) make this number bigger
boundingBoxSize: 10000

# Accepted image file types
acceptedTypes:
  -jpg
  -jpeg
  -gif
  -png

# The absolute path of your sites root directory
rootDirectory: "/"

# The cache directory for the dynamically generated Sprites, directory shouldn't be used for other files
relImageOutputDirectory: "/cache"

# The cache directory for the dynamically generated CSS file, directory shouldn't be used for other files
relTmplOutputDirectory: "/cache"

# The cache directory for the dynamically generated CSS Meta files, directory shouldn't be used for other files
relPreprocessorDirectory: "/preprocess"

# Delete the preprocessor files after they are used
deletePreprocess: false

# Various properties used in building the sprite
imageProperties:
  # The quality of jpg output, from 1-100(highest quality)
  jpgQuality: 75
  # The compression of PNG output 1-9(highest compression)
  pngCompression: 9

# The relative path of the transparent image, this is only used when generating pseudo-img tags
transparentImagePath: "./1_1_trans.gif"

#cacheTime in Minutes, set to 0 for no cache. During development set to 0
cacheTime: 20
  
